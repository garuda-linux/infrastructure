version: "3.9"
services:
  # Netdata
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: {{ inventory_hostname }}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - "./netdata/cache:/var/cache/netdata"
      - "./netdata/config:/etc/netdata"
      - "./netdata/lib:/var/lib/netdata"
{% if netdata_web_log == true %}
      - "/var/cache/garuda-{{ inventory_hostname }}/nginx/logs:/var/log/nginx:ro"
{% endif %}
{% if 'borg_servers' in group_names %}
      - "/backups:/backups:ro"
{% endif %}
      - "/etc/group:/host/etc/group:ro"
      - "/etc/os-release:/host/etc/os-release:ro"
      - "/etc/passwd:/host/etc/passwd:ro"
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
{% if netdata_parent == true %}
    ports:
      - 19999:19999
{% endif %}
    environment:
      DOCKER_HOST: docker_socket_proxy:2375
      NETDATA_CLAIM_TOKEN: {{ netdata_claim_token }}
      NETDATA_CLAIM_URL: {{ netdata_claim_url }}
{% if netdata_parent == true %}
    mem_limit: 3072m
{% else %}
    mem_limit: 700m
{% endif %}
    mem_reservation: 100m
{% if netdata_parent == true %}
    cpus: 4.0
{% else %}
    cpus: 0.5
{% endif %}
    restart: unless-stopped

  # Deepfence
  deepfence_agent:
    image: deepfenceio/deepfence_agent_ce:latest
    container_name: deepfence_agent
    pid: host
    network_mode: host
    privileged: true
    volumes:
      - "/sys/kernel/debug:/sys/kernel/debug:rw"
      - "./deepfence/logs:/var/log/fenced"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/:/fenced/mnt/host/:ro"
    environment:
      DEEPFENCE_KEY: {{ df_key }}
      MGMT_CONSOLE_PORT: {{ df_mgmt_console_port }}
      MGMT_CONSOLE_URL: {{ df_mgmt_console_url }}
      USER_DEFINED_TAGS: {{ df_user_defined_tags }}
    mem_limit: 1024m
    mem_reservation: 10m
    cpus: 0.2
    restart: unless-stopped

  # Centralized logging
  datadog_agent:
    image: datadog/agent:latest
    container_name: datadog_agent
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/proc/:/host/proc/:ro"
      - "/sys/fs/cgroup/:/host/sys/fs/cgroup:ro"
    environment:
      DD_API_KEY: {{ dd_api_key }}
      DD_SITE: {{ dd_site }}
      DD_LOGS_ENABLED: {{ dd_logs_enabled }}
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL:  {{ dd_logs_config_container_collect_all }}
      DD_PROCESS_AGENT_ENABLED: {{ dd_process_agent_enabled }}
    mem_limit: 500m
    mem_reservation: 100m
    cpus: 0.2
    restart: unless-stopped

  # Docker socket proxy
  docker_socket_proxy:
    image: tecnativa/docker-socket-proxy:latest
    container_name: docker_socket_proxy
    volumes:
     - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - CONTAINERS=1
    mem_limit: 50m
    mem_reservation: 10m
    cpus: 0.2
    restart: always
