version: "3.9"
services:
  # Webserver
  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - "/srv/http/repos:/var/lib/nginx/html/builds/repos:ro"
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./conf.d:/etc/nginx/conf.d:ro"
    ports:
      - "80:80"
    labels:
      - "diun.enable=true"
    restart: always

  # Synchronizing the repo
  syncthing:
    image: linuxserver/syncthing:latest
    container_name: garuda-syncthing
    environment:
      PUID: {{ puid }}
      PGID: {{ pgid }}
      TZ: {{ tz }}
    ports:
      - "22000:22000"
      - "21027:21027/udp"
    volumes:
      - "./syncthing:/config"
      - "/srv/http/repos:/srv/http/repos"
    restart: always
    labels:
      - "diun.enable=true"

  # Centralized logging
  datadoghq:
    image: datadog/agent:latest
    container_name: dd-agent
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/proc/:/host/proc/:ro"
      - "/sys/fs/cgroup/:/host/sys/fs/cgroup:ro"
    environment:
      DD_API_KEY: {{ dd_api_key }}
      DD_SITE: {{ dd_site }}
      DD_LOGS_ENABLED: {{ dd_logs_enabled }}
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL:  {{ dd_logs_config_container_collect_all }}
      DD_PROCESS_AGENT_ENABLED: {{ dd_process_agent_enabled }}
    restart: always
    labels:
      - "diun.enable=true"

  # GitLab runner for deployments
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./gitlab-runner:/etc/gitlab-runner"
    restart: always
    labels:
      - "diun.enable=true"

  # Automatic container updates
  diun:
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    volumes:
      - "./diun:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      DIUN_NOTIF_TELEGRAM_CHATIDS: {{ diun_notif_telegram_chatids }}
      DIUN_NOTIF_TELEGRAM_TOKEN: {{ diun_notif_telegram_token }}
      DIUN_PROVIDERS_DOCKER: {{ diun_providers_docker }}
      DIUN_WATCH_SCHEDULE: "{{ diun_watch_schedule }}"
      DIUN_WATCH_WORKERS: {{ diun_watch_workers }}
      LOG_JSON: {{ log_json }}
      LOG_LEVEL: {{ log_level }}
    restart: always
    labels:
      - "diun.enable=true"

  # Private network
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel run
    user: root
    restart: always
    volumes:
      - "./cloudflared:/root/.cloudflared"

  # Netdata
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: esxi-repo
    restart: always
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./netdata/config:/etc/netdata
      - ./netdata/lib:/var/lib/netdata
      - ./netdata/cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    environment:
      NETDATA_CLAIM_TOKEN: {{ netdata_claim_token }}
      NETDATA_CLAIM_URL: {{ netdata_claim_url }}

  # Deepfence
  deepfence_agent_ce:
    image: deepfenceio/deepfence_agent_ce:latest
    container_name: deepfence-agent
    pid: host
    network_mode: host
    privileged: true
    volumes:
      - "/sys/kernel/debug:/sys/kernel/debug:rw"
      - "./deepfence/logs:/var/log/fenced"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/:/fenced/mnt/host/:ro"
    environment:
      USER_DEFINED_TAGS: {{ df_user_defined_tags }}
      MGMT_CONSOLE_URL: {{ df_mgmt_console_url }}
      MGMT_CONSOLE_PORT: {{ df_mgmt_console_port }}
      DEEPFENCE_KEY: {{ df_key }}
    mem_limit: 400m
    mem_reservation: 10m
    cpus: 0.2
    restart: on-failure:5
    labels:
      - "diun.enable=true"
