version: "3.8"
services:
  # Webserver
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - "/srv/http/repos:/var/lib/nginx/html/builds/repos:ro"
      - "/srv/http/garuda-downloader:/var/lib/nginx/html/builds/garuda-downloader:ro"
      - "./certbot-webroot:/var/lib/nginx/html/acme:ro"
      - "./letsencrypt/etc:/etc/letsencrypt:ro"
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./conf.d:/etc/nginx/conf.d:ro"
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:81/nginx_status/"}]'
    tmpfs:
      - "/var/lib/nginx/html/builds/iso"
    ports:
      - "80:80"
      - "443:443"
    restart: always

  # Synchronizing all mirrors
  syncthing:
    image: linuxserver/syncthing:latest
    container_name: chaotic-syncthing
    ports:
      - "8384:8384"
      - "22000:22000"
      - "21027:21027/udp"
    volumes:
      - "./syncthing:/config"
      - "/srv/http/repos:/srv/http/repos"
    environment:
      PUID: {{ puid }}
      PGID: {{ pgid }} 
      TZ: {{ tz }}
    restart: unless-stopped

  # Letsencrypt SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    restart: always
    volumes:
      - "./certbot-webroot:/srv/http/webroot"
      - "./letsencrypt/etc:/etc/letsencrypt"
      - "./letsencrypt/var:/var/lib/letsencrypt"
    entrypoint: "/bin/sh -c 'trap exit TERM; sleep 10; while :; do certbot renew -w /srv/http/webroot/ --webroot; sleep 12h & wait $${!}; done;'"

  # Centralized logging
  datadoghq:
    image: datadog/agent:latest
    container_name: dd-agent
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/proc/:/host/proc/:ro"
      - "/sys/fs/cgroup/:/host/sys/fs/cgroup:ro"
    environment:
      DD_API_KEY: {{ dd_api_key }}
      DD_SITE: {{ dd_site }} 
      DD_LOGS_ENABLED: {{ dd_logs_enabled }}
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: {{ dd_logs_config_container_collect_all }}
      DD_PROCESS_AGENT_ENABLED: {{ dd_process_agent_enabled }}
    restart: always

# certbot init
# sudo docker run -p 80:80 -p 443:443 -it --rm --name certbot \
#            -v "/var/cache/garuda-build/letsencrypt/etc:/etc/letsencrypt" \
#            -v "/var/cache/garuda-build/letsencrypt/var:/var/lib/letsencrypt" \
#            certbot/certbot certonly
