version: "3.8"
services:
  # Webserver - reverse proxying all the other containers
  nginx:
    image: patrikjuvonen/docker-nginx-http3:latest
    container_name: nginx
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d/:ro"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/configs:/etc/nginx/configs:ro"
      - "./nginx/ssl/dhparam.pem:/etc/nginx/ssl/dhparam.pem:ro"
      - "./nginx/logs/:/var/log/nginx:rw"
      - "./nginx/goaccess:/usr/share/nginx/html/logs:ro"
      - "./nginx/www:/usr/share/nginx/html/www:ro"
      - "./nginx/crs-setup.conf:/usr/local/share/coreruleset/crs-setup.conf"
      - "./website:/usr/share/nginx/html/website:ro"
      - "./certbot-webroot:/var/lib/nginx/html/acme:ro"
      - "./letsencrypt/etc:/etc/letsencrypt:ro"
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:81/nginx_status/"}]'
      diun.enable: "true"
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    restart: always

  # SSL certs
  certbot:
    image: certbot/dns-cloudflare:latest
    container_name: certbot
    volumes:
      - "./certbot-webroot:/srv/http/webroot"
      - "./letsencrypt/etc:/etc/letsencrypt"
      - "./letsencrypt/var:/var/lib/letsencrypt"
    entrypoint: "/bin/sh -c 'trap exit TERM; sleep 10; while :; do certbot renew -w /srv/http/webroot/ --webroot; sleep 12h & wait $${!}; done;'"
    labels:
      - "diun.enable=true"
    restart: always

  # Whoogle search engine
  whoogle:
    image: benbusby/whoogle-search:latest
    container_name: whoogle
    pids_limit: 50
    mem_limit: 256mb
    memswap_limit: 256mb
    user: whoogle
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - /var/lib/tor/:size=10M,uid=927,gid=927,mode=1700
      - /run/tor/:size=1M,uid=927,gid=927,mode=1700
    volumes:
      - "./whoogle:/config"
    environment:
      WHOOGLE_AUTOCOMPLETE: {{ whoogle_autocomplete }}
      WHOOGLE_CONFIG_ALTS: {{ whoogle_config_alts }}
      WHOOGLE_CONFIG_LANGUAGE: {{ whoogle_config_language }}
      WHOOGLE_CONFIG_NEW_TAB: {{ whoogle_config_new_tab }}
      WHOOGLE_CONFIG_SEARCH_LANGUAGE: {{ whoogle_config_search_language }}
      WHOOGLE_CONFIG_THEME: {{ whoogle_config_theme }}
      WHOOGLE_CONFIG_URL: {{ whoogle_config_url }}
      WHOOGLE_CONFIG_VIEW_IMAGE: {{ whoogle_config_view_image }}
      WHOOGLE_RESULTS_PER_PAGE: {{ whoogle_results_per_page }}
    restart: always
    labels:
      - "diun.enable=true"

  # Centralised logging to Datadog
  datadoghq:
    image: datadog/agent:latest
    container_name: dd-agent
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/proc/:/host/proc/:ro"
      - "/sys/fs/cgroup/:/host/sys/fs/cgroup:ro"
    environment:
      DD_API_KEY: {{ dd_api_key }}
      DD_SITE: {{ dd_site }} 
      DD_LOGS_ENABLED: {{ dd_logs_enabled }}
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: {{ dd_logs_config_container_collect_all }}
      DD_PROCESS_AGENT_ENABLED: {{ dd_process_agent_enabled }}
    restart: always
    labels:
      - "diun.enable=true"

  # Automatic container updates
  diun:
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    volumes:
      - "./diun:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      DIUN_NOTIF_TELEGRAM_CHATIDS: {{ diun_notif_telegram_chatids }}
      DIUN_NOTIF_TELEGRAM_TOKEN: {{ diun_notif_telegram_token }}
      DIUN_PROVIDERS_DOCKER: {{ diun_providers_docker }}
      DIUN_WATCH_SCHEDULE: "'{{ diun_watch_schedule }}'"
      DIUN_WATCH_WORKERS: {{ diun_watch_workers }}
      LOG_JSON: {{ log_json }}
      LOG_LEVEL: {{ log_level }}
    restart: always
    labels:
      - "diun.enable=true"

  # Searxng search engine
  searx:
    image: searxng/searxng:latest
    container_name: searx
    command: {{ searxng_command }}
    volumes:
      - "./searxng:/etc/searxng:rw"
    environment:
      BIND_ADDRESS: {{ bind_address }}
      BASE_URL: {{ base_url }}
      MORTY_URL: {{ morty_url }}
      MORTY_KEY: {{ morty_key }}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    restart: always
    labels:
      - "diun.enable=true"

  morty:
    image: dalf/morty:latest
    container_name: morty
    ports:
      - "127.0.0.1:3000:3000"
    command: -timeout 6 -ipv6
    environment:
      MORTY_KEY: {{ morty_key }}
      MORTY_ADDRESS: {{ morty_address }}
    logging:
      driver: none
    read_only: true
    cap_drop:
      - ALL
    labels:
      - "diun.enable=true"
    restart: always

  filtron:
    image: dalf/filtron:latest
    container_name: filtron
    ports:
      - "127.0.0.1:4040:4040"
      - "127.0.0.1:4041:4041"
    command: -listen 0.0.0.0:4040 -api 0.0.0.0:4041 -target searxng:8080
    volumes:
      - "./searxng/rules.json:/etc/filtron/rules.json:rw"
    read_only: true
    cap_drop:
      - ALL
    restart: always
    labels:
      - "diun.enable=true"

  # Firefox syncserver
  syncserver:
    container_name: syncserver
    image: mozilla/syncserver:latest
    volumes:
    - ./syncserver:/data
    environment:
      PORT: {{ ffsync_port }}
      SYNCSERVER_BATCH_UPLOAD_ENABLED: {{ syncserver_batch_upload_enabled }}
      SYNCSERVER_FORCE_WSGI_ENVIRON: {{ syncserver_force_wsgi_environ }}
      SYNCSERVER_PUBLIC_URL: {{ syncserver_public_url }}
      SYNCSERVER_SECRET: {{ syncserver_secret }}
      SYNCSERVER_SQLURI: {{ syncserver_sqluri }}
    restart: always
    labels:
    - "diun.enable=true"

  # Web IRC access
  thelounge:
    image: thelounge/thelounge:latest
    container_name: thelounge
    volumes:
      - "./thelounge:/var/opt/thelounge"
    restart: always
    labels:
      - "diun.enable=true"

  # Password vault
  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    volumes:
      - "./bitwarden:/data"
    environment:
      WEBSOCKET_ENABLED: {{ websocket_enabled }}
      SIGNUPS_ALLOWED: {{ signups_allowed }}
      SMTP_HOST: {{ smtp_host }}
      SMTP_FROM: {{ smtp_from }}
      SMTP_PORT: {{ smtp_port }}
      SMTP_SSL: {{ smtp_ssl }}
      SMTP_USERNAME: {{ smtp_username }}
      SMTP_PASSWORD: {{ smtp_password }}
      DOMAIN: {{ domain }}
    restart: always
    labels:
      - "diun.enable=true"

  # Secure pastebin
  privatebin:
    image: privatebin/nginx-fpm-alpine:latest
    container_name: privatebin
    volumes:
      - "./privatebin:/srv/data"
    restart: always
    labels:
      - "diun.enable=true"

  # Garuda startpage
  homer:
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - "./startpage:/www/assets"
    restart: always
    labels:
      - "diun.enable=true"

  # MongoDB instance
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: {{ mongo_initdb_root_username }}
      MONGO_INITDB_ROOT_PASSWORD: {{ mongo_initdb_root_password }}
    restart: always

  # MongoDB admin interface
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: {{ me_config_mongodb_adminusername }}
      ME_CONFIG_MONGODB_ADMINPASSWORD: {{  me_config_mongodb_adminpassword }}
      ME_CONFIG_MONGODB_URL: {{ me_config_mongodb_url }}
    restart: always

