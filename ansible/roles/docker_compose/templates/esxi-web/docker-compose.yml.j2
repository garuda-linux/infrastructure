version: "3.9"
services:
  # Webserver - reverse proxying all the other containers
  nginx:
    image: macbre/nginx-http3:latest
    container_name: nginx
    volumes:
      - "./letsencrypt/etc:/etc/letsencrypt:ro"
      - "./nginx/conf.d:/etc/nginx/conf.d/:ro"
      - "./nginx/configs:/etc/nginx/configs:ro"
      - "./nginx/goaccess:/usr/share/nginx/html/logs:ro"
      - "./nginx/logs/:/var/log/nginx:rw"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/ssl/dhparam.pem:/etc/nginx/ssl/dhparam.pem:ro"
      - "./nginx/www:/usr/share/nginx/html/www:ro"
      - "./website:/usr/share/nginx/html/website:ro"
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    mem_limit: 1000m
    mem_reservation: 200m
    cpus: 2.0
    restart: always
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: "[{}]"
      diun.enable: "true"

  # SSL certs
  certbot:
    image: certbot/dns-cloudflare:latest
    container_name: certbot
    volumes:
      - "./letsencrypt/etc:/etc/letsencrypt"
      - "./letsencrypt/var:/var/lib/letsencrypt"
    entrypoint: "/bin/sh -c 'trap exit TERM; sleep 10; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    mem_limit: 50m
    cpus: 0.1
    restart: always
    labels:
      - "diun.enable=true"

  # Automatic container updates
  diun:
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    volumes:
      - "./diun:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      DIUN_NOTIF_TELEGRAM_CHATIDS: {{ diun_notif_telegram_chatids }}
      DIUN_NOTIF_TELEGRAM_TOKEN: {{ diun_notif_telegram_token }}
      DIUN_PROVIDERS_DOCKER: {{ diun_providers_docker }}
      DIUN_WATCH_SCHEDULE: "{{ diun_watch_schedule }}"
      DIUN_WATCH_WORKERS: {{ diun_watch_workers }}
      LOG_JSON: {{ log_json }}
      LOG_LEVEL: {{ log_level }}
    mem_limit: 40m
    cpus: 0.2
    restart: always
    labels:
      - "diun.enable=true"

  # Whoogle search engine
  whoogle:
    image: benbusby/whoogle-search:latest
    container_name: whoogle
    user: whoogle
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - "/var/lib/tor/:size=10M,uid=927,gid=927,mode=1700"
      - "/run/tor/:size=1M,uid=927,gid=927,mode=1700"
    volumes:
      - "./whoogle:/config"
    environment:
      WHOOGLE_AUTOCOMPLETE: {{ whoogle_autocomplete }}
      WHOOGLE_CONFIG_ALTS: {{ whoogle_config_alts }}
      WHOOGLE_CONFIG_LANGUAGE: {{ whoogle_config_language }}
      WHOOGLE_CONFIG_NEW_TAB: {{ whoogle_config_new_tab }}
      WHOOGLE_CONFIG_SEARCH_LANGUAGE: {{ whoogle_config_search_language }}
      WHOOGLE_CONFIG_THEME: {{ whoogle_config_theme }}
      WHOOGLE_CONFIG_URL: {{ whoogle_config_url }}
      WHOOGLE_CONFIG_VIEW_IMAGE: {{ whoogle_config_view_image }}
      WHOOGLE_RESULTS_PER_PAGE: {{ whoogle_results_per_page }}
    pids_limit: 50
    mem_limit: 256mb
    memswap_limit: 256mb
    cpus: 1.0
    restart: always
    labels:
      - "diun.enable=true"

  # Searxng search engine
  searx:
    image: searxng/searxng:latest
    container_name: searx
    depends_on:
      - filtron
      - morty
    command: {{ searxng_command }}
    volumes:
      - "./searxng:/etc/searxng:rw"
    environment:
      BIND_ADDRESS: {{ bind_address }}
      BASE_URL: {{ base_url }}
      MORTY_URL: {{ morty_url }}
      MORTY_KEY: {{ morty_key }}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    mem_limit: 1.8g
    mem_reservation: 500m
    cpus: 1.0
    restart: always
    labels:
      - "diun.enable=true"

  morty:
    image: dalf/morty:latest
    container_name: morty
    ports:
      - "127.0.0.1:3000:3000"
    command: -timeout 6 -ipv6
    environment:
      MORTY_KEY: {{ morty_key }}
      MORTY_ADDRESS: {{ morty_address }}
    logging:
      driver: none
    read_only: true
    cap_drop:
      - ALL
    mem_limit: 20m
    cpus: 0.2
    restart: always
    labels:
      - "diun.enable=true"

  filtron:
    image: dalf/filtron:latest
    container_name: filtron
    ports:
      - "127.0.0.1:4040:4040"
      - "127.0.0.1:4041:4041"
    command: -listen 0.0.0.0:4040 -api 0.0.0.0:4041 -target searxng:8080
    volumes:
      - "./searxng/rules.json:/etc/filtron/rules.json:rw"
    read_only: true
    cap_drop:
      - ALL
    mem_limit: 15m
    cpus: 0.2
    restart: always
    labels:
      - "diun.enable=true"

  # Firefox syncserver
  syncserver:
    container_name: syncserver
    image: crazymax/firefox-syncserver:latest
    volumes:
      - "./syncserver:/data"
    environment:
      FF_SYNCSERVER_ACCESSLOG: {{ syncserver_accesslog }}
      FF_SYNCSERVER_FORCE_WSGI_ENVIRON: {{ syncserver_force_wsgi_environ }}
      FF_SYNCSERVER_FORWARDED_ALLOW_IPS: "{{  syncserver_forwarded_ips }}"
      FF_SYNCSERVER_PUBLIC_URL: {{ syncserver_public_url }}
      FF_SYNCSERVER_SECRET: {{ syncserver_secret }}
      FF_SYNCSERVER_SQLURI: {{ syncserver_sqluri }}
      TZ: {{ syncserver_tz }}
    mem_limit: 100m
    mem_reservation: 50m
    cpus: 0.2
    restart: always
    labels:
      - "diun.enable=true"

  # Web IRC access
  thelounge:
    image: thelounge/thelounge:latest
    container_name: thelounge
    volumes:
      - "./thelounge:/var/opt/thelounge"
    mem_limit: 80m
    mem_reservation: 30m
    cpus: 0.2
    restart: always
    labels:
      - "diun.enable=true"

  # Password vault
  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    volumes:
      - "./bitwarden:/data"
    environment:
      WEBSOCKET_ENABLED: {{ websocket_enabled }}
      SIGNUPS_ALLOWED: {{ signups_allowed }}
      SMTP_HOST: {{ smtp_host }}
      SMTP_FROM: {{ smtp_from }}
      SMTP_PORT: {{ smtp_port }}
      SMTP_SSL: {{ smtp_ssl }}
      SMTP_USERNAME: {{ smtp_username }}
      SMTP_PASSWORD: {{ smtp_password }}
      DOMAIN: {{ domain }}
    mem_limit: 350m
    mem_reservation: 10m
    cpus: 0.2
    restart: always
    labels:
      - "diun.enable=true"

  # Secure pastebin
  privatebin:
    image: privatebin/nginx-fpm-alpine:latest
    container_name: privatebin
    volumes:
      - "./privatebin:/srv/data"
      - "./configs/privatebin.cfg.php:/srv/cfg/conf.php"
    mem_limit: 80m
    mem_reservation: 40m
    cpus: 0.2
    restart: always
    labels:
      - "diun.enable=true"

  # Garuda startpage
  homer:
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - "./startpage:/www/assets"
    mem_limit: 10m
    cpus: 0.1
    restart: always
    labels:
      - "diun.enable=true"

  # MongoDB instance
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: {{ mongo_initdb_root_username }}
      MONGO_INITDB_ROOT_PASSWORD: {{ mongo_initdb_root_password }}
    mem_limit: 500m
    mem_reservation: 150m
    cpus: 2.0
    restart: always
    labels:
      - "diun.enable=true"

  # MongoDB admin interface
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: {{ me_config_mongodb_adminusername }}
      ME_CONFIG_MONGODB_ADMINPASSWORD: {{ me_config_mongodb_adminpassword }}
      ME_CONFIG_MONGODB_URL: {{ me_config_mongodb_url }}
    mem_limit: 100m
    mem_reservation: 20m
    cpus: 0.2
    restart: unless-stopped
    labels:
      - "diun.enable=true"
