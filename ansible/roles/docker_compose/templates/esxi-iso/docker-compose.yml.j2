version: "3.9"
services:
  # Webserver
  nginx:
    image: nginx:alpine-perl
    container_name: nginx
    volumes:
      - "./buildiso/iso:/var/lib/nginx/html/builds/iso:rw"
      - "./buildiso/logs:/var/lib/nginx/html/builds/iso/logs:ro"
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./conf.d:/etc/nginx/conf.d:ro"
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:81/nginx_status/"}]'
    ports:
      - "80:80"
      - "443:443"
    mem_limit: 500m
    mem_reservation: 200m
    cpus: 2.0
    restart: always

  # Garuda iso autobuilder
  garuda-iso-autobuild:
    build: ./buildiso
    image: garuda-tools-iso:latest
    container_name: garuda-iso-autobuild
    privileged: true
    command: auto
    volumes:
      - "./buildiso/cache/buildiso:/var/cache/garuda-tools/garuda-chroots/buildiso"
      - "./buildiso/cache/anacron:/var/spool/anacron"
      - "/var/cache/pacman/pkg/:/var/cache/pacman/pkg/"
      - "./buildiso/iso:/var/cache/garuda-tools/garuda-builds/iso/"
      - "./buildiso/logs:/var/cache/garuda-tools/garuda-logs/"
      - "./id_ed25519:/root/.ssh/id_ed25519"
    environment:
      TELEGRAM: {{ telegram }}
      ISO-TYPE: {{ iso_type }}
    restart: always

# certbot init
# sudo docker run -p 80:80 -p 443:443 -it --rm -v "/var/cache/garuda-iso/letsencrypt/etc:/etc/letsencrypt" -v "/var/cache/garuda-iso/letsencrypt/var:/var/lib/letsencrypt" certbot/certbot certonly --standalone --agree-tos -n -m "team@garudalinux.org" -d "iso.builds.garudalinux.org"
