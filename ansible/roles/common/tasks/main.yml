- name: Check if Chaotic-AUR is installed already
  stat:
    path: /etc/pacman.d/chaotic-mirrorlist
  register: caur_exists
- name: Retrieve Chaotic-AUR master key and sign it
  shell: pacman-key --recv-key FBA220DFC880C036 --keyserver keyserver.ubuntu.com && pacman-key --lsign-key FBA220DFC880C036
  when: caur_exists.stat.exists | default(true) == false
- name: Install Chaotic-AUR keyring and mirrorlist
  pacman:
    name:
      - "https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst"
      - "https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst"
- name: Install pacman config
  template:
    dest: /etc/pacman.conf
    group: root
    mode: 0644
    owner: root
    src: pacman.conf.j2
- name: Configure pacman mirror
  template:
    dest: /etc/pacman.d/mirrorlist
    group: root
    mode: 0644
    owner: root
    src: mirrorlist.j2
- name: Update package cache
  pacman:
    update_cache: yes
- name: Install core packages
  pacman:
    name:
      - logrotate
      - mlocate
      - pacman-contrib
      - rsync
      - smartmontools
      - vnstat
      - zram-generator
    state: present
- name: Start and enable vnstatd
  systemd:
    name: vnstat
    state: started
    enabled: yes
- name: Start and enable systemd-timesyncd
  systemd:
    name: systemd-timesyncd
    state: started
    enabled: yes
- name: Enable mlocate timer
  systemd:
    name: updatedb.timer
    state: started
    enabled: yes
- name: Configure smartd to do periodic health checks
  copy:
    src: smartd.conf
    dest: /etc/smartd.conf
    group: root
    mode: 0644
    owner: root
- name: Generate locales
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items:
    - en_US.UTF-8
- name: Configure locales
  template:
    dest: /etc/locale.conf
    group: root
    mode: 0644
    owner: root
    src: locale.conf.j2
- name: Create drop-in directories for systemd configuration
  file:
    group: root
    mode: 0755
    owner: root
    path: /etc/systemd/{{ item }}.d
    state: directory
  loop:
    - system.conf
    - journald.conf
- name: Install journald.conf overrides
  template:
    dest: /etc/systemd/journald.conf.d/override.conf
    group: root
    mode: 0644
    owner: root
    src: journald.conf.j2
  notify:
    - restart journald
- name: Install system.conf overrides
  template:
    dest: /etc/systemd/system.conf.d/override.conf
    group: root
    mode: 0644
    owner: root
    src: system.conf.j2
  notify:
    - systemd daemon-reload
- name: Install zram-generator config for zram
  template:
    src: zram-generator.conf.j2
    dest: /etc/systemd/zram-generator.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart systemd-zram-setup@zram0
- name: Disable zswap to prevent conflict with zram
  copy:
    content: "w- /sys/module/zswap/parameters/enabled - - - - N"
    dest: /etc/tmpfiles.d/zram.conf
    group: root
    mode: 0644
    owner: root
  register: zramtmpfiles
- name: Use tmpfiles.d/zram.conf
  command: systemd-tmpfiles --create
  when: zramtmpfiles.changed
- name: Create drop-in directories for oomd
  file:
    group: root
    mode: 0755
    owner: root
    path: /etc/systemd/system/{{ item }}.d
    state: directory
  with_items:
    - "-.slice"
    - "user@.service"
- name: Install drop-in snippets for oomd
  copy:
    dest: /etc/systemd/system/{{ item }}.d/override.conf
    group: root
    mode: 0644
    owner: root
    src: oomd-override_{{ item }}.conf
  with_items:
    - "-.slice"
    - "user@.service"
  notify:
    - systemd daemon-reload
- name: Enable systemd-oomd
  systemd:
    name: systemd-oomd
    state: started
    enabled: yes
- name: Configure logrotate
  template:
    dest: /etc/logrotate.conf
    group: root
    mode: 0644
    owner: root
    src: logrotate.conf.j2
- name: Enable logrotate timer
  systemd:
    name: logrotate.timer
    state: started
    enabled: yes
- name: Install custom paccache.service
  copy:
    dest: /etc/systemd/system/paccache.service
    group: root
    mode: 0644
    owner: root
    src: paccache.service
- name: Enable paccache timer
  systemd:
    name: paccache.timer
    state: started
    enabled: yes
    daemon_reload: yes
- name: Install motd update script
  template:
    dest: /usr/local/bin/update-motd.sh
    group: root
    mode: 0
    owner: root
    src: update-motd.sh.j2
- name: Make motd update script executable
  file:
    dest: /usr/local/bin/update-motd.sh
    mode: a+x
- name: Install motd systemd units
  copy:
    dest: /etc/systemd/system/{{ item }}
    group: root
    mode: 0644
    owner: root
    src: "{{ item }}"
  loop:
    - update-motd.service
    - update-motd.timer
  notify:
    - systemd daemon-reload
- name: Install cloudflare tunnel credentials file
  copy:
    content: "{{ cloudflared_tunnel }}"
    dest: /var/cache/garuda-{{ inventory_hostname }}/cloudflared/tunnel.json
    group: root
    mode: 0600
    owner: root
  when: docker_compose | default(false) == true and cloudflared_tunnel is defined
- name: Enable motd timer
  systemd:
    name: update-motd.timer
    state: started
    enabled: yes
